name: Build and Release APK

on:
  push:
    branches:
      - main  # Change this to the branch you want to trigger the workflow on
permissions:
  contents: write  # Allows the workflow to create releases
  packages: write  # Allows access to packages

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'  # Specify the Node.js version you want to use

    - name: Set Version
      run: echo "VERSION=$(node -p "require('./app.json').expo.version")" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Release v${{ env.VERSION }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload APKs
      id: upload_apks
      run: |
        echo '{
          "version": "${{ env.VERSION }}",
          "apks": [
        ' > release/version.json

        APK_FILES=(
          "build/app-armeabi-v7a-release.apk"
          "build/app-arm64-v8a-release.apk"
          "build/app-x86-release.apk"
          "build/app-x86_64-release.apk"
        )

        for APK in "${APK_FILES[@]}"; do
          BASENAME=$(basename "$APK")
          echo "Uploading $BASENAME..."
          RESPONSE=$(curl -X POST \
            -H "Content-Type: application/vnd.android.package-archive" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            --data-binary @"$APK" \
            "${{ steps.create_release.outputs.upload_url }}")
          URL=$(echo "$RESPONSE" | jq -r .url)
          echo "Uploaded $BASENAME: $URL"
          echo "  { \"name\": \"$BASENAME\", \"url\": \"$URL\" }," >> release/version.json
        done

        # Remove the last comma and close the JSON array
        sed -i '$ s/,$//' release/version.json
        echo '  ]
        }' >> release/version.json

    - name: Push version.json to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./release
        publish_branch: gh-pages
